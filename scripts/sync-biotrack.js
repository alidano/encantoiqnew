// scripts/sync-biotrack.js
const { biotrackSync } = require('../src/services/biotrackSyncService');

async function runSync() {
  console.log('üöÄ Iniciando sincronizaci√≥n autom√°tica de BioTrack...');
  
  try {
    // Test de conexi√≥n
    const connected = await biotrackSync.testConnection();
    if (!connected) {
      console.error('‚ùå No se pudo conectar a BioTrack');
      process.exit(1);
    }

    console.log('‚úÖ Conexi√≥n a BioTrack exitosa');

    // Obtener conteos actuales
    const counts = await biotrackSync.getTableCounts();
    console.log('üìä Conteos en BioTrack:', counts);

    // Ejecutar sincronizaci√≥n incremental
    const { results, summary } = await biotrackSync.syncAll(false);

    console.log('\nüìà RESUMEN DE SINCRONIZACI√ìN:');
    console.log(`‚è±Ô∏è  Duraci√≥n: ${summary.duration}ms`);
    console.log(`üì¶ Total procesados: ${summary.totalRecords}`);
    console.log(`‚ûï Nuevos: ${summary.newRecords}`);
    console.log(`üîÑ Actualizados: ${summary.updatedRecords}`);
    console.log(`‚ùå Errores: ${summary.errors}`);

    console.log('\nüìã DETALLES POR TABLA:');
    results.forEach(result => {
      console.log(`\n${result.table.toUpperCase()}:`);
      console.log(`  - Procesados: ${result.recordsProcessed}`);
      console.log(`  - Insertados: ${result.recordsInserted}`);
      console.log(`  - Actualizados: ${result.recordsUpdated}`);
      console.log(`  - Errores: ${result.errors.length}`);
      
      if (result.errors.length > 0) {
        console.log('  - Primeros errores:');
        result.errors.slice(0, 3).forEach(error => {
          console.log(`    ‚Ä¢ ${error}`);
        });
      }
    });

    if (summary.errors === 0) {
      console.log('\nüéâ Sincronizaci√≥n completada exitosamente!');
    } else {
      console.log(`\n‚ö†Ô∏è  Sincronizaci√≥n completada con ${summary.errors} errores`);
    }

  } catch (error) {
    console.error('üí• Error en sincronizaci√≥n:', error);
    process.exit(1);
  }
}

// Ejecutar si es llamado directamente
if (require.main === module) {
  runSync().catch(console.error);
}

module.exports = { runSync };
