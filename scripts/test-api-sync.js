// scripts/test-full-sync.js
const fetch = require('node-fetch');
require('dotenv').config();

const API_BASE_URL = process.env.NEXT_PUBLIC_APP_BASE_URL || 'http://localhost:3000';

async function testSync() {
  console.log('üöÄ Probando sincronizaci√≥n completa...');
  
  try {
    // 1. Test de conexi√≥n
    console.log('üîç 1. Probando conexi√≥n...');
    const statusResponse = await fetch(`${API_BASE_URL}/api/sync/biotrack`);
    const statusData = await statusResponse.json();
    
    if (statusData.success && statusData.connected) {
      console.log('‚úÖ Conexi√≥n exitosa');
      console.log('üìä Conteos en BioTrack:');
      Object.entries(statusData.tableCounts).forEach(([table, count]) => {
        console.log(`   ${table}: ${count.toLocaleString()}`);
      });
    } else {
      console.error('‚ùå No se pudo conectar a BioTrack');
      return;
    }

    // 2. Test de sincronizaci√≥n de productos
    console.log('\\nüõí 2. Sincronizando products...');
    const productsSync = await fetch(`${API_BASE_URL}/api/sync/biotrack`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        syncType: 'incremental',
        tables: ['products']
      })
    });

    const productsResult = await productsSync.json();
    if (productsResult.success) {
      console.log('‚úÖ Products sincronizados exitosamente');
      productsResult.results.forEach(result => {
        console.log(`   ${result.table}: ${result.recordsInserted} nuevos, ${result.recordsUpdated} actualizados`);
        if (result.errors.length > 0) {
          console.log(`   ‚ö†Ô∏è ${result.errors.length} errores`);
        }
      });
    } else {
      console.error('‚ùå Error sincronizando products:', productsResult.error);
    }

    // 3. Test de sincronizaci√≥n de sales
    console.log('\\nüí∞ 3. Sincronizando sales...');
    const salesSync = await fetch(`${API_BASE_URL}/api/sync/biotrack`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        syncType: 'incremental',
        tables: ['sales']
      })
    });

    const salesResult = await salesSync.json();
    if (salesResult.success) {
      console.log('‚úÖ Sales sincronizadas exitosamente');
      salesResult.results.forEach(result => {
        console.log(`   ${result.table}: ${result.recordsInserted} nuevos, ${result.recordsUpdated} actualizados`);
        if (result.errors.length > 0) {
          console.log(`   ‚ö†Ô∏è ${result.errors.length} errores`);
        }
      });
    } else {
      console.error('‚ùå Error sincronizando sales:', salesResult.error);
    }

    // 4. Test de sincronizaci√≥n completa
    console.log('\\nüéØ 4. Sincronizaci√≥n completa...');
    const fullSync = await fetch(`${API_BASE_URL}/api/sync/biotrack`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        syncType: 'incremental',
        tables: ['customers', 'products', 'sales']
      })
    });

    const fullResult = await fullSync.json();
    if (fullResult.success) {
      console.log('üéâ Sincronizaci√≥n completa exitosa');
      console.log('üìä Resumen:', fullResult.summary);
      
      console.log('\\nüìã Detalles por tabla:');
      fullResult.results.forEach(result => {
        console.log(`   ${result.table.toUpperCase()}:`);
        console.log(`     - Procesados: ${result.recordsProcessed}`);
        console.log(`     - Nuevos: ${result.recordsInserted}`);
        console.log(`     - Actualizados: ${result.recordsUpdated}`);
        console.log(`     - Errores: ${result.errors.length}`);
      });
    } else {
      console.error('‚ùå Error en sincronizaci√≥n completa:', fullResult.error);
    }

  } catch (error) {
    console.error('üí• Error general:', error.message);
  }
}

// Funci√≥n para testing r√°pido de products solamente
async function testProductsOnly() {
  console.log('üõí Test r√°pido: solo productos...');
  
  try {
    const response = await fetch(`${API_BASE_URL}/api/sync/biotrack`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        syncType: 'incremental',
        tables: ['products']
      })
    });

    const result = await response.json();
    console.log('üìä Resultado:', result);

  } catch (error) {
    console.error('‚ùå Error:', error.message);
  }
}

// Ejecutar basado en argumentos
const command = process.argv[2];
if (command === 'products') {
  testProductsOnly().catch(console.error);
} else {
  testSync().catch(console.error);
}
